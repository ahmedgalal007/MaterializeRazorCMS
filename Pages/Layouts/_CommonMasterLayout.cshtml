@{
  @* using this variables to load front pages assets *@
  bool isFront = ViewData["isFront"] is bool isFrontValue ? isFrontValue : false;
  ViewData["main"] = isFront ? "front-" : "";
  ViewData["frontVar"] = isFront ? "Front" : "";
  @* Compact/Fluid class *@
  ViewData["contentType"] = ViewData["container"] is string container && container == "container-xxl" ? "layout-compact" : "layout-wide";
}

@inject IHttpContextAccessor httpContextAccessor

<!DOCTYPE html>
<html lang="en"
      class='light-style @(ViewData["navbarType"] is string navbarType ? navbarType : "") @(ViewData["menuFixed"] is string menuFixed ? menuFixed : "") @(ViewData["menuCollapsed"] is string menuCollapsed ? menuCollapsed : "") @(ViewData["contentType"] is string contentType ? contentType : "") @(ViewData["footerFixed"] is string footerFixed ? footerFixed : "") @(ViewData["customizerHidden"] is string customizerHidden ? customizerHidden : "")'
      dir="ltr" data-theme="theme-default" data-assets-path='@((httpContextAccessor.HttpContext?.Request.PathBase ?? "") + "/")'
      data-template='@(isFront ? "front-page" : (Convert.ToBoolean(TempData.Peek("menuHorizontal")?.ToString()) ? "horizontal-menu-template" : "vertical-menu-template"))'>

<head>
  <meta charset="utf-8" />
  <meta name="viewport"
        content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />

  @{
    string title = ViewData["title"] as string ?? "";
    string appName = TempData.Peek("appName") as string ?? "";
    string productPage = TempData.Peek("productPage") as string ?? "";
  }
  <title>@title | @appName - Asp.Net Core Admin Template</title>
  <meta name="description" content="" />

  <!-- Canonical SEO -->
  <link rel="canonical" href='@productPage'>
  <!-- Favicon -->
  <link rel="icon" type="image/x-icon" href="~/img/favicon/favicon.ico" />

  <!-- Loader -->
  <style>
    /* Center the loader */
    #main-loader {
      position: absolute;
      left: 50%;
      top: 50%;
      z-index: 1;
      width: 120px;
      height: 120px;
      margin: -76px 0 0 -76px;
      border: 16px solid #f3f3f3;
      border-radius: 50%;
      @* border-top: 16px solid #3498db;*@
      border-top: 16px solid blue;
      border-right: 16px solid green;
      border-bottom: 16px solid red;
      border-left: 16px solid pink;
      -webkit-animation: spin 2s linear infinite;
      animation: spin 2s linear infinite;
    }

    @@-webkit-keyframes spin {
      0% {
        -webkit-transform: rotate(0deg);
      }

      100% {
        -webkit-transform: rotate(360deg);
      }
    }

    @@keyframes spin {
      0% {
        transform: rotate(0deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }

    /* Add animation to "page content" */
    .animate-bottom {
      position: relative;
      -webkit-animation-name: animatebottom;
      -webkit-animation-duration: 1s;
      animation-name: animatebottom;
      animation-duration: 1s
    }

    @@-webkit-keyframes animatebottom {
      from {
        bottom: -100px;
        opacity: 0
      }

      to {
        bottom: 0px;
        opacity: 1
      }
    }

    @@keyframes animatebottom {
      from {
        bottom: -100px;
        opacity: 0
      }

      to {
        bottom: 0;
        opacity: 1
      }
    }

    #myDiv {
      display: none;
      text-align: center;
    }
  </style>
  <!-- /Loader -->
  <!-- Core Styles -->
  @await Html.PartialAsync("Layouts/Sections/_Styles" + ViewData["frontVar"])


  <!-- Vendor Styles -->
  @RenderSection("VendorStyles", required: false)

  <!-- Page Styles -->
  @RenderSection("PageStyles", required: false)

  <!-- Include Scripts for customizer, helper, analytics, config -->
  @await Html.PartialAsync("Layouts/Sections/_ScriptsIncludes" + ViewData["frontVar"])

  <!-- Editors Script Manager -->
  <script id="template-editors-script-manager" type="text/javascript">
    const EditorsScriptManager = new Object();
    // document.addEventListener("DOMContentLoaded", (event) => {
    //   console.log("DOM fully loaded and parsed");
    // });
    const PageLoaded = function() {
      document.getElementById("main-loader").style.display = "none";
      document.getElementById("dynamic-render-container").style.display = "block";
    }
  </script>
  <!--/ Editors Script Manager -->
</head>

<body>
  <div id="main-loader"></div>
  <div style="display:none;" id="dynamic-render-container" class="animate-bottom">
    <!-- Layout Content -->
  @RenderBody()
  <!--/ Layout Content -->
  </div>
  <!-- Core Scripts -->
  @await Html.PartialAsync("Layouts/Sections/_Scripts" + ViewData["frontVar"])

  <!-- Vendor Scripts -->
  @RenderSection("VendorScripts", required: false)

  <script src='~/js/@ViewData["main"]main.dist.js'></script>

  <!-- Page Scripts-->
  @RenderSection("PageScripts", required: false)


</body>

</html>
